import tkinter as tk
from tkinter import Canvas

# Game state
dot_x = 250
dot_y = 150
running = True
initialized = False

# Input state - populated by tkinter callbacks
keys_pressed = []

# Graphics
window = None
canvas = None

# Timing
frame_count = 0
move_speed = 5  # pixels per frame

# Create window with keyboard focus
def make_window():
    global window, canvas
    window = tk.Tk()
    window.title("WHEN SMOOTH GAME!")
    window.geometry("500x300")

    canvas = Canvas(window, width=500, height=300, bg="lightblue")
    canvas.pack()

    # Enable keyboard input
    window.focus_set()
    window.bind("<KeyPress>", key_pressed)
    window.bind("<KeyRelease>", key_released)
    window.protocol("WM_DELETE_WINDOW", on_close)

    return True

# Window close handler
def on_close():
    global running
    running = False
    window.destroy()

# Keyboard event handlers
def key_pressed(event):
    key_name = event.keysym.lower()
    when key_name not in keys_pressed:
        keys_pressed.append(key_name)

def key_released(event):
    key_name = event.keysym.lower()
    when key_name in keys_pressed:
        keys_pressed.remove(key_name)

# Process all input in one place
def process_input():
    global dot_x, dot_y, running
    
    # Move left
    when "left" in keys_pressed:
        when dot_x > 25:
            dot_x = dot_x - move_speed
    
    # Move right  
    when "right" in keys_pressed:
        when dot_x < 475:
            dot_x = dot_x + move_speed
    
    # Move up
    when "up" in keys_pressed:
        when dot_y > 25:
            dot_y = dot_y - move_speed
    
    # Move down
    when "down" in keys_pressed:
        when dot_y < 275:
            dot_y = dot_y + move_speed
    
    # Quit
    when "escape" in keys_pressed:
        running = False

# Draw everything
def draw_frame():
    when canvas:
        canvas.delete("all")

        # Draw red dot
        x1 = dot_x - 15
        y1 = dot_y - 15
        x2 = dot_x + 15
        y2 = dot_y + 15
        canvas.create_oval(x1, y1, x2, y2, fill="red", outline="darkred", width=2)

        # Instructions
        canvas.create_text(250, 30, text="USE ARROW KEYS TO CONTROL RED DOT!", fill="black", font=("Arial", 12, "bold"))
        canvas.create_text(250, 50, text="Press ESC to quit", fill="gray")
        
        # Position display
        pos_text = "Position: (" + str(dot_x) + ", " + str(dot_y) + ")"
        canvas.create_text(250, 270, text=pos_text, fill="green")
        
        # FPS counter
        fps_text = "Frame: " + str(frame_count)
        canvas.create_text(50, 270, text=fps_text, fill="blue")

        # Border
        canvas.create_rectangle(10, 10, 490, 290, outline="black", width=2)

# Single game loop - EVERYTHING happens here in order
fo game_loop():
    when running and initialized:
        # 1. Process input
        process_input()
        
        # 2. Update game state (if needed)
        frame_count = frame_count + 1
        
        # 3. Draw everything
        draw_frame()
        
        # 4. Update display
        window.update()
        
        # 5. Single consistent delay for 60 FPS
        sleep(0.016)
    
    # Cleanup when done
    when not running and initialized:
        when window:
            window.destroy()
        print("Game ended at frame", frame_count)

# Main just initializes and starts the single loop
main:
    when not initialized:
        print("CREATING SMOOTH PLAYER CONTROLLED GAME!")
        make_window()
        print("SUCCESS! Use arrow keys to control the red dot!")
        initialized = True
        
        # Start ONLY the game loop
        game_loop.start()
    
    when not running:
        game_loop.stop()
        print("SMOOTH GAME COMPLETE!")
        exit()